package com.adeem.stockflow.domain;

import static com.adeem.stockflow.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class ShipmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentAllPropertiesEquals(Shipment expected, Shipment actual) {
        assertShipmentAutoGeneratedPropertiesEquals(expected, actual);
        assertShipmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentAllUpdatablePropertiesEquals(Shipment expected, Shipment actual) {
        assertShipmentUpdatableFieldsEquals(expected, actual);
        assertShipmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentAutoGeneratedPropertiesEquals(Shipment expected, Shipment actual) {
        assertThat(actual)
            .as("Verify Shipment auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentUpdatableFieldsEquals(Shipment expected, Shipment actual) {
        assertThat(actual)
            .as("Verify Shipment relevant properties")
            .satisfies(a -> assertThat(a.getReference()).as("check reference").isEqualTo(expected.getReference()))
            .satisfies(a -> assertThat(a.getTrackingNumber()).as("check trackingNumber").isEqualTo(expected.getTrackingNumber()))
            .satisfies(a -> assertThat(a.getCarrier()).as("check carrier").isEqualTo(expected.getCarrier()))
            .satisfies(a -> assertThat(a.getShippingDate()).as("check shippingDate").isEqualTo(expected.getShippingDate()))
            .satisfies(a ->
                assertThat(a.getEstimatedDeliveryDate()).as("check estimatedDeliveryDate").isEqualTo(expected.getEstimatedDeliveryDate())
            )
            .satisfies(a -> assertThat(a.getActualDeliveryDate()).as("check actualDeliveryDate").isEqualTo(expected.getActualDeliveryDate())
            )
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a ->
                assertThat(a.getShippingCost())
                    .as("check shippingCost")
                    .usingComparator(bigDecimalCompareTo)
                    .isEqualTo(expected.getShippingCost())
            )
            .satisfies(a -> assertThat(a.getWeight()).as("check weight").isEqualTo(expected.getWeight()))
            .satisfies(a -> assertThat(a.getNotes()).as("check notes").isEqualTo(expected.getNotes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentUpdatableRelationshipsEquals(Shipment expected, Shipment actual) {
        assertThat(actual)
            .as("Verify Shipment relationships")
            .satisfies(a -> assertThat(a.getSaleOrder()).as("check saleOrder").isEqualTo(expected.getSaleOrder()))
            .satisfies(a -> assertThat(a.getAddress()).as("check address").isEqualTo(expected.getAddress()));
    }
}
