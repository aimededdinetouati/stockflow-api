package com.adeem.stockflow.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PermissionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPermissionAllPropertiesEquals(Permission expected, Permission actual) {
        assertPermissionAutoGeneratedPropertiesEquals(expected, actual);
        assertPermissionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPermissionAllUpdatablePropertiesEquals(Permission expected, Permission actual) {
        assertPermissionUpdatableFieldsEquals(expected, actual);
        assertPermissionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPermissionAutoGeneratedPropertiesEquals(Permission expected, Permission actual) {
        assertThat(actual)
            .as("Verify Permission auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPermissionUpdatableFieldsEquals(Permission expected, Permission actual) {
        assertThat(actual)
            .as("Verify Permission relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getResourceType()).as("check resourceType").isEqualTo(expected.getResourceType()))
            .satisfies(a -> assertThat(a.getAction()).as("check action").isEqualTo(expected.getAction()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPermissionUpdatableRelationshipsEquals(Permission expected, Permission actual) {
        // empty method
    }
}
